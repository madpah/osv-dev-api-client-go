/*
OSV

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package osvdev

import (
	"encoding/json"
)

// checks if the OsvSeverity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OsvSeverity{}

// OsvSeverity struct for OsvSeverity
type OsvSeverity struct {
	// The quantitative score.
	Score *string `json:"score,omitempty"`
	Type *OsvSeverityType `json:"type,omitempty"`
}

// NewOsvSeverity instantiates a new OsvSeverity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOsvSeverity() *OsvSeverity {
	this := OsvSeverity{}
	var type_ OsvSeverityType = OSVSEVERITYTYPE_UNSPECIFIED
	this.Type = &type_
	return &this
}

// NewOsvSeverityWithDefaults instantiates a new OsvSeverity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOsvSeverityWithDefaults() *OsvSeverity {
	this := OsvSeverity{}
	var type_ OsvSeverityType = OSVSEVERITYTYPE_UNSPECIFIED
	this.Type = &type_
	return &this
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *OsvSeverity) GetScore() string {
	if o == nil || IsNil(o.Score) {
		var ret string
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvSeverity) GetScoreOk() (*string, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *OsvSeverity) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given string and assigns it to the Score field.
func (o *OsvSeverity) SetScore(v string) {
	o.Score = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OsvSeverity) GetType() OsvSeverityType {
	if o == nil || IsNil(o.Type) {
		var ret OsvSeverityType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvSeverity) GetTypeOk() (*OsvSeverityType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OsvSeverity) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given OsvSeverityType and assigns it to the Type field.
func (o *OsvSeverity) SetType(v OsvSeverityType) {
	o.Type = &v
}

func (o OsvSeverity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OsvSeverity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableOsvSeverity struct {
	value *OsvSeverity
	isSet bool
}

func (v NullableOsvSeverity) Get() *OsvSeverity {
	return v.value
}

func (v *NullableOsvSeverity) Set(val *OsvSeverity) {
	v.value = val
	v.isSet = true
}

func (v NullableOsvSeverity) IsSet() bool {
	return v.isSet
}

func (v *NullableOsvSeverity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOsvSeverity(val *OsvSeverity) *NullableOsvSeverity {
	return &NullableOsvSeverity{value: val, isSet: true}
}

func (v NullableOsvSeverity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOsvSeverity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


