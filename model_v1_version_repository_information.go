/*
OSV

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package osvdev

import (
	"encoding/json"
)

// checks if the V1VersionRepositoryInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1VersionRepositoryInformation{}

// V1VersionRepositoryInformation struct for V1VersionRepositoryInformation
type V1VersionRepositoryInformation struct {
	// Source address of the repository.
	Address *string `json:"address,omitempty"`
	// Commit hash.
	Commit *string `json:"commit,omitempty" validate:"regexp=^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"`
	Tag *string `json:"tag,omitempty"`
	Type *V1VersionRepositoryInformationRepoType `json:"type,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewV1VersionRepositoryInformation instantiates a new V1VersionRepositoryInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1VersionRepositoryInformation() *V1VersionRepositoryInformation {
	this := V1VersionRepositoryInformation{}
	var type_ V1VersionRepositoryInformationRepoType = V1VERSIONREPOSITORYINFORMATIONREPOTYPE_UNSPECIFIED
	this.Type = &type_
	return &this
}

// NewV1VersionRepositoryInformationWithDefaults instantiates a new V1VersionRepositoryInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1VersionRepositoryInformationWithDefaults() *V1VersionRepositoryInformation {
	this := V1VersionRepositoryInformation{}
	var type_ V1VersionRepositoryInformationRepoType = V1VERSIONREPOSITORYINFORMATIONREPOTYPE_UNSPECIFIED
	this.Type = &type_
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *V1VersionRepositoryInformation) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VersionRepositoryInformation) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *V1VersionRepositoryInformation) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *V1VersionRepositoryInformation) SetAddress(v string) {
	o.Address = &v
}

// GetCommit returns the Commit field value if set, zero value otherwise.
func (o *V1VersionRepositoryInformation) GetCommit() string {
	if o == nil || IsNil(o.Commit) {
		var ret string
		return ret
	}
	return *o.Commit
}

// GetCommitOk returns a tuple with the Commit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VersionRepositoryInformation) GetCommitOk() (*string, bool) {
	if o == nil || IsNil(o.Commit) {
		return nil, false
	}
	return o.Commit, true
}

// HasCommit returns a boolean if a field has been set.
func (o *V1VersionRepositoryInformation) HasCommit() bool {
	if o != nil && !IsNil(o.Commit) {
		return true
	}

	return false
}

// SetCommit gets a reference to the given string and assigns it to the Commit field.
func (o *V1VersionRepositoryInformation) SetCommit(v string) {
	o.Commit = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *V1VersionRepositoryInformation) GetTag() string {
	if o == nil || IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VersionRepositoryInformation) GetTagOk() (*string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *V1VersionRepositoryInformation) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *V1VersionRepositoryInformation) SetTag(v string) {
	o.Tag = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V1VersionRepositoryInformation) GetType() V1VersionRepositoryInformationRepoType {
	if o == nil || IsNil(o.Type) {
		var ret V1VersionRepositoryInformationRepoType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VersionRepositoryInformation) GetTypeOk() (*V1VersionRepositoryInformationRepoType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V1VersionRepositoryInformation) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given V1VersionRepositoryInformationRepoType and assigns it to the Type field.
func (o *V1VersionRepositoryInformation) SetType(v V1VersionRepositoryInformationRepoType) {
	o.Type = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *V1VersionRepositoryInformation) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VersionRepositoryInformation) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *V1VersionRepositoryInformation) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *V1VersionRepositoryInformation) SetVersion(v string) {
	o.Version = &v
}

func (o V1VersionRepositoryInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1VersionRepositoryInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Commit) {
		toSerialize["commit"] = o.Commit
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableV1VersionRepositoryInformation struct {
	value *V1VersionRepositoryInformation
	isSet bool
}

func (v NullableV1VersionRepositoryInformation) Get() *V1VersionRepositoryInformation {
	return v.value
}

func (v *NullableV1VersionRepositoryInformation) Set(val *V1VersionRepositoryInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableV1VersionRepositoryInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableV1VersionRepositoryInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1VersionRepositoryInformation(val *V1VersionRepositoryInformation) *NullableV1VersionRepositoryInformation {
	return &NullableV1VersionRepositoryInformation{value: val, isSet: true}
}

func (v NullableV1VersionRepositoryInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1VersionRepositoryInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


