/*
OSV

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package osvdev

import (
	"encoding/json"
	"time"
)

// checks if the OsvVulnerability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OsvVulnerability{}

// OsvVulnerability A vulnerability entry. The protobuf representation is *NOT* stable and only used for implementing the JSON based API.
type OsvVulnerability struct {
	// Required. Affected commit ranges and versions.
	Affected []OsvAffected `json:"affected,omitempty"`
	// Optional. IDs for the same vulnerability in other databases.
	Aliases []string `json:"aliases,omitempty"`
	// Optional. Credits for the vulnerability.
	Credits []OsvCredit `json:"credits,omitempty"`
	// Optional. JSON object holding additional information about the vulnerability as defined by the database for which the record applies.
	DatabaseSpecific map[string]interface{} `json:"databaseSpecific,omitempty"`
	// Required. Any additional human readable details for the vulnerability.
	Details *string `json:"details,omitempty"`
	// The `id` field is a unique identifier for the vulnerability entry. It is a string of the format `<DB>-<ENTRYID>`, where `DB` names the database and `ENTRYID` is in the format used by the database. For example: “OSV-2020-111”, “CVE-2021-3114”, or “GHSA-vp9c-fpxx-744v”.
	Id *string `json:"id,omitempty"`
	// The RFC3339 timestamp indicating when this entry was last modified.
	Modified *time.Time `json:"modified,omitempty"`
	// The RFC3339 timestamp indicating when this entry was published.
	Published *time.Time `json:"published,omitempty"`
	// Optional. URLs to more information/advisories (including the scheme e.g \"https://\").
	References []OsvReference `json:"references,omitempty"`
	// Optional. List of IDs of closely related vulnerabilities, such as the same problem in alternate ecosystems.
	Related []string `json:"related,omitempty"`
	// The OSV schema version.
	SchemaVersion *string `json:"schemaVersion,omitempty"`
	// Optional. Severity of the vulnerability.
	Severity []OsvSeverity `json:"severity,omitempty"`
	// Required. One line human readable summary for the vulnerability. It is recommended to keep this under 120 characters.
	Summary *string `json:"summary,omitempty"`
	// Optional. The RFC3339 timestamp indicating when this entry is considered to be withdrawn.
	Withdrawn *time.Time `json:"withdrawn,omitempty"`
}

// NewOsvVulnerability instantiates a new OsvVulnerability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOsvVulnerability() *OsvVulnerability {
	this := OsvVulnerability{}
	return &this
}

// NewOsvVulnerabilityWithDefaults instantiates a new OsvVulnerability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOsvVulnerabilityWithDefaults() *OsvVulnerability {
	this := OsvVulnerability{}
	return &this
}

// GetAffected returns the Affected field value if set, zero value otherwise.
func (o *OsvVulnerability) GetAffected() []OsvAffected {
	if o == nil || IsNil(o.Affected) {
		var ret []OsvAffected
		return ret
	}
	return o.Affected
}

// GetAffectedOk returns a tuple with the Affected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvVulnerability) GetAffectedOk() ([]OsvAffected, bool) {
	if o == nil || IsNil(o.Affected) {
		return nil, false
	}
	return o.Affected, true
}

// HasAffected returns a boolean if a field has been set.
func (o *OsvVulnerability) HasAffected() bool {
	if o != nil && !IsNil(o.Affected) {
		return true
	}

	return false
}

// SetAffected gets a reference to the given []OsvAffected and assigns it to the Affected field.
func (o *OsvVulnerability) SetAffected(v []OsvAffected) {
	o.Affected = v
}

// GetAliases returns the Aliases field value if set, zero value otherwise.
func (o *OsvVulnerability) GetAliases() []string {
	if o == nil || IsNil(o.Aliases) {
		var ret []string
		return ret
	}
	return o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvVulnerability) GetAliasesOk() ([]string, bool) {
	if o == nil || IsNil(o.Aliases) {
		return nil, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *OsvVulnerability) HasAliases() bool {
	if o != nil && !IsNil(o.Aliases) {
		return true
	}

	return false
}

// SetAliases gets a reference to the given []string and assigns it to the Aliases field.
func (o *OsvVulnerability) SetAliases(v []string) {
	o.Aliases = v
}

// GetCredits returns the Credits field value if set, zero value otherwise.
func (o *OsvVulnerability) GetCredits() []OsvCredit {
	if o == nil || IsNil(o.Credits) {
		var ret []OsvCredit
		return ret
	}
	return o.Credits
}

// GetCreditsOk returns a tuple with the Credits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvVulnerability) GetCreditsOk() ([]OsvCredit, bool) {
	if o == nil || IsNil(o.Credits) {
		return nil, false
	}
	return o.Credits, true
}

// HasCredits returns a boolean if a field has been set.
func (o *OsvVulnerability) HasCredits() bool {
	if o != nil && !IsNil(o.Credits) {
		return true
	}

	return false
}

// SetCredits gets a reference to the given []OsvCredit and assigns it to the Credits field.
func (o *OsvVulnerability) SetCredits(v []OsvCredit) {
	o.Credits = v
}

// GetDatabaseSpecific returns the DatabaseSpecific field value if set, zero value otherwise.
func (o *OsvVulnerability) GetDatabaseSpecific() map[string]interface{} {
	if o == nil || IsNil(o.DatabaseSpecific) {
		var ret map[string]interface{}
		return ret
	}
	return o.DatabaseSpecific
}

// GetDatabaseSpecificOk returns a tuple with the DatabaseSpecific field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvVulnerability) GetDatabaseSpecificOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DatabaseSpecific) {
		return map[string]interface{}{}, false
	}
	return o.DatabaseSpecific, true
}

// HasDatabaseSpecific returns a boolean if a field has been set.
func (o *OsvVulnerability) HasDatabaseSpecific() bool {
	if o != nil && !IsNil(o.DatabaseSpecific) {
		return true
	}

	return false
}

// SetDatabaseSpecific gets a reference to the given map[string]interface{} and assigns it to the DatabaseSpecific field.
func (o *OsvVulnerability) SetDatabaseSpecific(v map[string]interface{}) {
	o.DatabaseSpecific = v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *OsvVulnerability) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvVulnerability) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *OsvVulnerability) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *OsvVulnerability) SetDetails(v string) {
	o.Details = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OsvVulnerability) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvVulnerability) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OsvVulnerability) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OsvVulnerability) SetId(v string) {
	o.Id = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *OsvVulnerability) GetModified() time.Time {
	if o == nil || IsNil(o.Modified) {
		var ret time.Time
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvVulnerability) GetModifiedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *OsvVulnerability) HasModified() bool {
	if o != nil && !IsNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given time.Time and assigns it to the Modified field.
func (o *OsvVulnerability) SetModified(v time.Time) {
	o.Modified = &v
}

// GetPublished returns the Published field value if set, zero value otherwise.
func (o *OsvVulnerability) GetPublished() time.Time {
	if o == nil || IsNil(o.Published) {
		var ret time.Time
		return ret
	}
	return *o.Published
}

// GetPublishedOk returns a tuple with the Published field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvVulnerability) GetPublishedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Published) {
		return nil, false
	}
	return o.Published, true
}

// HasPublished returns a boolean if a field has been set.
func (o *OsvVulnerability) HasPublished() bool {
	if o != nil && !IsNil(o.Published) {
		return true
	}

	return false
}

// SetPublished gets a reference to the given time.Time and assigns it to the Published field.
func (o *OsvVulnerability) SetPublished(v time.Time) {
	o.Published = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *OsvVulnerability) GetReferences() []OsvReference {
	if o == nil || IsNil(o.References) {
		var ret []OsvReference
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvVulnerability) GetReferencesOk() ([]OsvReference, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *OsvVulnerability) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []OsvReference and assigns it to the References field.
func (o *OsvVulnerability) SetReferences(v []OsvReference) {
	o.References = v
}

// GetRelated returns the Related field value if set, zero value otherwise.
func (o *OsvVulnerability) GetRelated() []string {
	if o == nil || IsNil(o.Related) {
		var ret []string
		return ret
	}
	return o.Related
}

// GetRelatedOk returns a tuple with the Related field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvVulnerability) GetRelatedOk() ([]string, bool) {
	if o == nil || IsNil(o.Related) {
		return nil, false
	}
	return o.Related, true
}

// HasRelated returns a boolean if a field has been set.
func (o *OsvVulnerability) HasRelated() bool {
	if o != nil && !IsNil(o.Related) {
		return true
	}

	return false
}

// SetRelated gets a reference to the given []string and assigns it to the Related field.
func (o *OsvVulnerability) SetRelated(v []string) {
	o.Related = v
}

// GetSchemaVersion returns the SchemaVersion field value if set, zero value otherwise.
func (o *OsvVulnerability) GetSchemaVersion() string {
	if o == nil || IsNil(o.SchemaVersion) {
		var ret string
		return ret
	}
	return *o.SchemaVersion
}

// GetSchemaVersionOk returns a tuple with the SchemaVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvVulnerability) GetSchemaVersionOk() (*string, bool) {
	if o == nil || IsNil(o.SchemaVersion) {
		return nil, false
	}
	return o.SchemaVersion, true
}

// HasSchemaVersion returns a boolean if a field has been set.
func (o *OsvVulnerability) HasSchemaVersion() bool {
	if o != nil && !IsNil(o.SchemaVersion) {
		return true
	}

	return false
}

// SetSchemaVersion gets a reference to the given string and assigns it to the SchemaVersion field.
func (o *OsvVulnerability) SetSchemaVersion(v string) {
	o.SchemaVersion = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *OsvVulnerability) GetSeverity() []OsvSeverity {
	if o == nil || IsNil(o.Severity) {
		var ret []OsvSeverity
		return ret
	}
	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvVulnerability) GetSeverityOk() ([]OsvSeverity, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *OsvVulnerability) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given []OsvSeverity and assigns it to the Severity field.
func (o *OsvVulnerability) SetSeverity(v []OsvSeverity) {
	o.Severity = v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *OsvVulnerability) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvVulnerability) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *OsvVulnerability) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *OsvVulnerability) SetSummary(v string) {
	o.Summary = &v
}

// GetWithdrawn returns the Withdrawn field value if set, zero value otherwise.
func (o *OsvVulnerability) GetWithdrawn() time.Time {
	if o == nil || IsNil(o.Withdrawn) {
		var ret time.Time
		return ret
	}
	return *o.Withdrawn
}

// GetWithdrawnOk returns a tuple with the Withdrawn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvVulnerability) GetWithdrawnOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Withdrawn) {
		return nil, false
	}
	return o.Withdrawn, true
}

// HasWithdrawn returns a boolean if a field has been set.
func (o *OsvVulnerability) HasWithdrawn() bool {
	if o != nil && !IsNil(o.Withdrawn) {
		return true
	}

	return false
}

// SetWithdrawn gets a reference to the given time.Time and assigns it to the Withdrawn field.
func (o *OsvVulnerability) SetWithdrawn(v time.Time) {
	o.Withdrawn = &v
}

func (o OsvVulnerability) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OsvVulnerability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Affected) {
		toSerialize["affected"] = o.Affected
	}
	if !IsNil(o.Aliases) {
		toSerialize["aliases"] = o.Aliases
	}
	if !IsNil(o.Credits) {
		toSerialize["credits"] = o.Credits
	}
	if !IsNil(o.DatabaseSpecific) {
		toSerialize["databaseSpecific"] = o.DatabaseSpecific
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}
	if !IsNil(o.Published) {
		toSerialize["published"] = o.Published
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Related) {
		toSerialize["related"] = o.Related
	}
	if !IsNil(o.SchemaVersion) {
		toSerialize["schemaVersion"] = o.SchemaVersion
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.Withdrawn) {
		toSerialize["withdrawn"] = o.Withdrawn
	}
	return toSerialize, nil
}

type NullableOsvVulnerability struct {
	value *OsvVulnerability
	isSet bool
}

func (v NullableOsvVulnerability) Get() *OsvVulnerability {
	return v.value
}

func (v *NullableOsvVulnerability) Set(val *OsvVulnerability) {
	v.value = val
	v.isSet = true
}

func (v NullableOsvVulnerability) IsSet() bool {
	return v.isSet
}

func (v *NullableOsvVulnerability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOsvVulnerability(val *OsvVulnerability) *NullableOsvVulnerability {
	return &NullableOsvVulnerability{value: val, isSet: true}
}

func (v NullableOsvVulnerability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOsvVulnerability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


