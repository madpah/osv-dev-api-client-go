/*
OSV

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package osvdev

import (
	"encoding/json"
)

// checks if the OsvCredit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OsvCredit{}

// OsvCredit struct for OsvCredit
type OsvCredit struct {
	// Contact methods (URLs).
	Contact []string `json:"contact,omitempty"`
	// The name to give credit to.
	Name *string `json:"name,omitempty"`
	Type *OsvCreditType `json:"type,omitempty"`
}

// NewOsvCredit instantiates a new OsvCredit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOsvCredit() *OsvCredit {
	this := OsvCredit{}
	var type_ OsvCreditType = OSVCREDITTYPE_UNSPECIFIED
	this.Type = &type_
	return &this
}

// NewOsvCreditWithDefaults instantiates a new OsvCredit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOsvCreditWithDefaults() *OsvCredit {
	this := OsvCredit{}
	var type_ OsvCreditType = OSVCREDITTYPE_UNSPECIFIED
	this.Type = &type_
	return &this
}

// GetContact returns the Contact field value if set, zero value otherwise.
func (o *OsvCredit) GetContact() []string {
	if o == nil || IsNil(o.Contact) {
		var ret []string
		return ret
	}
	return o.Contact
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvCredit) GetContactOk() ([]string, bool) {
	if o == nil || IsNil(o.Contact) {
		return nil, false
	}
	return o.Contact, true
}

// HasContact returns a boolean if a field has been set.
func (o *OsvCredit) HasContact() bool {
	if o != nil && !IsNil(o.Contact) {
		return true
	}

	return false
}

// SetContact gets a reference to the given []string and assigns it to the Contact field.
func (o *OsvCredit) SetContact(v []string) {
	o.Contact = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OsvCredit) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvCredit) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OsvCredit) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OsvCredit) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OsvCredit) GetType() OsvCreditType {
	if o == nil || IsNil(o.Type) {
		var ret OsvCreditType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsvCredit) GetTypeOk() (*OsvCreditType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OsvCredit) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given OsvCreditType and assigns it to the Type field.
func (o *OsvCredit) SetType(v OsvCreditType) {
	o.Type = &v
}

func (o OsvCredit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OsvCredit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Contact) {
		toSerialize["contact"] = o.Contact
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableOsvCredit struct {
	value *OsvCredit
	isSet bool
}

func (v NullableOsvCredit) Get() *OsvCredit {
	return v.value
}

func (v *NullableOsvCredit) Set(val *OsvCredit) {
	v.value = val
	v.isSet = true
}

func (v NullableOsvCredit) IsSet() bool {
	return v.isSet
}

func (v *NullableOsvCredit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOsvCredit(val *OsvCredit) *NullableOsvCredit {
	return &NullableOsvCredit{value: val, isSet: true}
}

func (v NullableOsvCredit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOsvCredit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


